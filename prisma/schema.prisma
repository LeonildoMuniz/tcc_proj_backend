// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


//executar a criação: yarn prisma migrate dev

model Estrutura{
  id String @id @default(uuid())
  UnidadeOrg String

colaborador Colaborador[]

  @@map("tb_estr")
}


//ultimo Cadastro
model Colaborador{
  id String @id @default(uuid())
  nome String 
  matricula String
  admissao String
  cpf String
  senha String
  foto String
  acesso Boolean @default(false)
  status Boolean @default(true)
  admin Boolean @default(false)


  dt_cad DateTime? @default(now())
  dt_atu DateTime? @default(now())

  estrutura Estrutura @relation(fields: [estrutura_id], references: [id])
  cargo Cargo @relation(fields: [cargo_id],references: [id])
  alocacao Alocacao @relation(fields: [alocacao_id], references: [id])
  info Info[]
  @@map("tb_col")
  estrutura_id String
  cargo_id String
  alocacao_id String
}

//Quarto Cadastro
model Cargo{
  id String @id @default(uuid())
  descricao String
  gestor Boolean @default(false)

  nivel Nivel @relation(fields: [nivel_id],references: [id])
  colaborador Colaborador[]  
  @@map("tb_car")
  nivel_id String

}

//Terceiro Cadastro
model Alocacao{
  id String @id @default(uuid())
  c_custo Int
  desc_custo String

  estabelecimento Estabelecimento @relation(fields: [estabelecimento_id],references: [id])
  colaborador Colaborador[]  
  @@map("tb_alo")
  estabelecimento_id String
}

//Segundo Cadastro
model Estabelecimento{ 
  id String @id @default(uuid())
  estab Int
  desc_estab String

  empresa Empresa @relation(fields: [empresa_id], references: [id])
  alocacao Alocacao[]
  @@map("tb_est")
  empresa_id String
}

//Primeiro cadastro
model Empresa{ 
  id String @id @default(uuid())
  empresa Int
  desc_empresa String

  estabelecimento Estabelecimento[]
  @@map("tb_emp")
}

model Nivel{
  id String @id @default(uuid())
  controle Int
  desc_nivel String

  cargo Cargo[] 

  @@map("tb_niv")
}

model Info{
  id String @id @default(uuid())
  titulo String
  mensagem String
  anexo String
  data_envio DateTime? @default(now())

  colaborador Colaborador @relation(fields: [id_colaborador],references: [id])
  @@map("tb_inf")
  id_colaborador String
}

